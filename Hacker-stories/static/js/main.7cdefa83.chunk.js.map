{"version":3,"sources":["check.svg","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","props","id","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","storiesReducer","state","action","type","isLoading","isError","data","payload","list","concat","page","filter","story","objectID","Error","getUrl","searchTerm","extractSearchTerm","url","substring","lastIndexOf","replace","SearchForm","onSearchInput","onSearchSubmit","onSubmit","className","value","isFocused","onInputChange","disabled","InputWithLabel","children","inputRef","React","useRef","useEffect","current","focus","htmlFor","onChange","SORTS","NONE","TITLE","sortBy","AUTHOR","COMMENT","reverse","POINT","List","onRemoveItem","useState","sortKey","isReverse","sort","setSort","handleSort","sortFunction","sortedList","display","width","onClick","map","item","Item","href","rel","author","num_comments","points","height","LastSearches","lastSearches","onLastSearch","index","App","initialState","localStorage","getItem","setValue","setItem","useSemiPersistentState","setSearchTerm","urls","setUrls","useReducer","stories","dispatchStories","handleFetchStories","useCallback","a","lastUrl","axios","get","result","hits","handleSearch","reduce","slice","getLastSearches","event","preventDefault","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gTAAA,SAASA,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAI,EAAqB,IAAMoB,cAAc,IAAK,KAAmB,IAAMA,cAAc,OAAQ,CAC/FC,EAAG,6kBAGD,EAAW,SAAkBC,GAC/B,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQd,EAAyBW,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAMF,cAAc,MAAOvB,EAAS,CACtD6B,GAAI,SACJC,EAAG,MACHC,EAAG,MACHC,QAAS,cACTC,MAAO,CACLC,iBAAkB,mBAEpBC,SAAU,WACVC,IAAKV,GACJE,GAAQD,EAAqB,IAAMJ,cAAc,QAAS,KAAMI,GAAS,KAAM,IAGhFU,EAA0B,IAAMC,YAAW,SAAUV,EAAOQ,GAC9D,OAAoB,IAAMb,cAAc,EAAUvB,EAAS,CACzD0B,OAAQU,GACPR,O,GAEU,I,MCXTW,G,MAAiB,SAACC,EAAOC,GAC7B,OAAQA,EAAOC,MAEb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEG,WAAW,EACXC,SAAS,IAGb,IAAK,wBACH,OAAO,2BACFJ,GADL,IAEEG,WAAW,EACXC,SAAS,EACTC,KAC0B,IAAxBJ,EAAOK,QAAQC,KACXN,EAAOK,QAAQC,KACfP,EAAMK,KAAKG,OAAOP,EAAOK,QAAQC,MACvCE,KAAMR,EAAOK,QAAQG,OAGzB,IAAK,wBACH,OAAO,2BACFT,GADL,IAEEG,WAAW,EACXC,SAAS,IAGb,IAAK,eACH,OAAO,2BACFJ,GADL,IAEEK,KAAML,EAAMK,KAAKK,QACf,SAAAC,GAAK,OAAIV,EAAOK,QAAQM,WAAaD,EAAMC,cAGjD,QACE,MAAM,IAAIC,SAWVC,EAAS,SAACC,EAAYN,GAAb,gBANE,iCAMF,OALI,UAKJ,YAJM,UAIN,OAAiEM,EAAjE,YAHI,SAGJ,OAA4FN,IAGrGO,EAAoB,SAAAC,GAAG,OAAIA,EAAIC,UAAUD,EAAIE,YAAY,KAAO,EAAGF,EAAIE,YAAY,MAAMC,QAP1E,SAOgG,KAuI/GC,EAAa,SAAC,GAAD,IAAGN,EAAH,EAAGA,WAAYO,EAAf,EAAeA,cAAeC,EAA9B,EAA8BA,eAA9B,OAEjB,0BAAMC,SAAUD,EAAgBE,UAAU,eACxC,kBAAC,EAAD,CACEpC,GAAG,SACHqC,MAAOX,EACPY,WAAS,EACTC,cAAeN,GAEf,4CAGF,4BACEpB,KAAK,SACL2B,UAAWd,EACXU,UAAU,uBAHZ,YAWEK,EAAiB,SAAC,GAAoE,IAAlEzC,EAAiE,EAAjEA,GAAiE,IAA7Da,YAA6D,MAAxD,OAAwD,EAAhDwB,EAAgD,EAAhDA,MAAOE,EAAyC,EAAzCA,cAAeD,EAA0B,EAA1BA,UAAWI,EAAe,EAAfA,SAEpEC,EAAWC,IAAMC,SASvB,OANAD,IAAME,WAAU,WACVR,GAAaK,EAASI,SACxBJ,EAASI,QAAQC,UAElB,CAACV,IAGF,oCACE,2BAAOW,QAASjD,EAAIoC,UAAU,SAC3BM,GAFL,OAME,2BACEnC,IAAKoC,EACL3C,GAAIA,EACJa,KAAMA,EACNwB,MAAOA,EACPa,SAAUX,EACVH,UAAU,YAOZe,EAAQ,CACZC,KAAM,SAAAlC,GAAI,OAAIA,GACdmC,MAAO,SAAAnC,GAAI,OAAIoC,iBAAOpC,EAAM,UAC5BqC,OAAQ,SAAArC,GAAI,OAAIoC,iBAAOpC,EAAM,WAC7BsC,QAAS,SAAAtC,GAAI,OAAIoC,iBAAOpC,EAAM,gBAAgBuC,WAC9CC,MAAO,SAAAxC,GAAI,OAAIoC,iBAAOpC,EAAM,UAAUuC,YAIlCE,EAAO,SAAC,GAA4B,IAA1BzC,EAAyB,EAAzBA,KAAM0C,EAAmB,EAAnBA,aAAmB,EACfhB,IAAMiB,SAAS,CACrCC,QAAS,OACTC,WAAW,IAH0B,mBAChCC,EADgC,KAC1BC,EAD0B,KAOjCC,EAAa,SAACJ,GAElB,IAAMC,EAAYC,EAAKF,UAAYA,IAAYE,EAAKD,UACpDE,EAAQ,CAACH,UAASC,eAGdI,EAAehB,EAAMa,EAAKF,SAE1BM,EAAaJ,EAAKD,UACpBI,EAAajD,GAAMuC,UACnBU,EAAajD,GAEjB,OACE,6BACE,yBAAKd,MAAO,CAACiE,QAAS,SACpB,0BAAMjE,MAAO,CAACkE,MAAM,QAClB,4BAAQtE,GAAG,QAAQa,KAAK,SAAS0D,QAAS,kBAAML,EAAW,WAA3D,UAEF,0BAAM9D,MAAO,CAACkE,MAAM,QAClB,4BAAQtE,GAAG,SAASa,KAAK,SAAS0D,QAAS,kBAAML,EAAW,YAA5D,WAEF,0BAAM9D,MAAO,CAACkE,MAAM,QAClB,4BAAQtE,GAAG,UAAUa,KAAK,SAAS0D,QAAS,kBAAML,EAAW,aAA7D,aAEF,0BAAM9D,MAAO,CAACkE,MAAM,QAClB,4BAAQtE,GAAG,QAAQa,KAAK,SAAS0D,QAAS,kBAAML,EAAW,WAA3D,WAEF,0BAAM9D,MAAO,CAACkE,MAAM,QAApB,YAEDF,EAAWI,KAAI,SAACC,GAAD,OAAW,kBAAC,EAAD,CAAM9F,IAAK8F,EAAKlD,SAAUkD,KAAOA,EAAMb,aAAcA,OAhBlF,MAsBEc,EAAO,SAAC,GAA8B,IAA3BD,EAA0B,EAA1BA,KAAMb,EAAoB,EAApBA,aACrB,OACE,yBAAKxB,UAAU,QACb,0BAAMhC,MAAO,CAAEkE,MAAO,QACpB,uBAAGK,KAAMF,EAAK7C,IAAKtD,OAAO,SAASsG,IAAI,uBAAuBH,EAAK3E,OADrE,KAGA,0BAAMM,MAAO,CAAEkE,MAAO,QAAUG,EAAKI,QACrC,0BAAMzE,MAAO,CAAEkE,MAAO,QAAUG,EAAKK,cACrC,0BAAM1E,MAAO,CAAEkE,MAAO,QAAUG,EAAKM,QACrC,0BAAM3E,MAAO,CAAEkE,MAAO,QACpB,4BACEzD,KAAK,SACL0D,QAAS,kBAAMX,EAAaa,IAC5BrC,UAAU,uBAEV,kBAAC,EAAD,CAAO4C,OAAO,OAAOV,MAAM,aAO/BW,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAjB,OACnB,oCAEGD,EAAaV,KAAI,SAAC9C,EAAY0D,GAAb,OAChB,4BAAQzG,IAAK+C,EAAa0D,EAAOvE,KAAK,SAAS0D,QAAS,kBAAMY,EAAazD,KACxEA,QAQM2D,EA5PH,WAAM,MA1Fa,SAAC1G,EAAK2G,GAAiB,MAE1B1C,IAAMiB,SAC9B0B,aAAaC,QAAQ7G,IAAQ2G,GAHqB,mBAE7CjD,EAF6C,KAEtCoD,EAFsC,KAYpD,OALA7C,IAAME,WAAU,WACdyC,aAAaG,QAAQ/G,EAAK0D,KACzB,CAACA,EAAO1D,IAGJ,CAAC0D,EAAOoD,GAiFqBE,CAAuB,SAAU,SAHrD,mBAGTjE,EAHS,KAGGkE,EAHH,OAMQhD,IAAMiB,SAAS,CAACpC,EAAOC,EAAY,KAN3C,mBAMTmE,EANS,KAMHC,EANG,OASmBlD,IAAMmD,WACvCrF,EACA,CAAEM,KAAM,GAAII,KAAM,EAAGN,WAAW,EAAOC,SAAS,IAXlC,mBASTiF,EATS,KASAC,EATA,KAeVC,EAAqBtD,IAAMuD,YAAN,sBAAkB,8BAAAC,EAAA,6DAC3CH,EAAgB,CAAEpF,KAAM,uBADmB,SAInCwF,EAAUR,EAAKA,EAAKpH,OAAS,GAJM,SAKpB6H,IAAMC,IAAIF,GALU,OAKnCG,EALmC,OAOzCP,EAAgB,CACdpF,KAAM,wBACNI,QAAS,CACPC,KAAMsF,EAAOxF,KAAKyF,KAClBrF,KAAMoF,EAAOxF,KAAKI,QAXmB,gDAezC6E,EAAgB,CAAEpF,KAAM,0BAfiB,yDAiB1C,CAACgF,IAGJjD,IAAME,WAAU,WACdoD,MACC,CAACA,IAGJ,IA4BMQ,EAAe,SAAChF,EAAYN,GAChC,IAAMQ,EAAMH,EAAOC,EAAYN,GAC/B0E,EAAQD,EAAK1E,OAAOS,KAIhBsD,EA9FgB,SAAAW,GAAI,OAC1BA,EAAKc,QAAO,SAACH,EAAQ5E,EAAKwD,GACxB,IAAM1D,EAAaC,EAAkBC,GACrC,OAAc,IAAVwD,EACKoB,EAAOrF,OAAOO,GAKnBA,IAFuB8E,EAAOA,EAAO/H,OAAS,GAGzC+H,EAEAA,EAAOrF,OAAOO,KAEtB,IACFkF,OAAO,GACPA,MAAM,GAAI,GA8EUC,CAAgBhB,GAUrC,OACE,yBAAKzD,UAAU,aACb,wBAAIA,UAAU,oBAAd,qBAEA,kBAAC,EAAD,CACEV,WAAYA,EACZO,cA1CoB,SAAC6E,GACzBlB,EAAckB,EAAMxI,OAAO+D,QA0CvBH,eAtCqB,SAAC4E,GAC1BJ,EAAahF,EAAY,GAGzBoF,EAAMC,oBAqCJ,kBAAC,EAAD,CAAc7B,aAAcA,EAAcC,aAjCrB,SAAAzD,GACvBkE,EAAclE,GAEdgF,EAAahF,EAAY,MAgCtBsE,EAAQjF,SAAW,uDAEpB,kBAAC,EAAD,CAAMG,KAAM8E,EAAQhF,KAAM4C,aA1DJ,SAACa,GACzBwB,EAAgB,CACdpF,KAAM,eACNI,QAASwD,OAyDRuB,EAAQlF,UACP,0CAEA,4BAAQD,KAAK,SAAS0D,QA1BT,WACjB,IAAM8B,EAAUR,EAAKA,EAAKpH,OAAS,GAC7BiD,EAAaC,EAAkB0E,GACrCK,EAAahF,EAAYsE,EAAQ5E,KAAO,KAuBpC,cC7LY4F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7cdefa83.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M113.636,272.638c-2.689,0-5.267-1.067-7.168-2.97L2.967,166.123c-3.956-3.957-3.956-10.371-0.001-14.329l54.673-54.703       c1.9-1.9,4.479-2.97,7.167-2.97c2.689,0,5.268,1.068,7.169,2.969l41.661,41.676L225.023,27.332c1.9-1.901,4.48-2.97,7.168-2.97l0,0       c2.688,0,5.268,1.068,7.167,2.97l54.675,54.701c3.956,3.957,3.956,10.372,0,14.328L120.803,269.668       C118.903,271.57,116.325,272.638,113.636,272.638z M24.463,158.958l89.173,89.209l158.9-158.97l-40.346-40.364L120.803,160.264       c-1.9,1.902-4.478,2.971-7.167,2.971c-2.688,0-5.267-1.068-7.168-2.97l-41.66-41.674L24.463,158.958z\"\n}));\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 297 297\",\n    style: {\n      enableBackground: \"new 0 0 297 297\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.46e24b69.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport axios from 'axios';\r\nimport {ReactComponent as Check} from './check.svg';\r\nimport { sortBy } from 'lodash';\r\n\r\nimport './App.css';\r\n\r\n// Custom hook to manage state yet synchronize with local storage, hence semi persistent.\r\nconst useSemiPersistentState = (key, initialState) => {\r\n  // Define the value variable and setValue function from a useState hook. If a value already exists, set it to that. Otherwise, go to initialState\r\n  const [value, setValue] = React.useState(\r\n    localStorage.getItem(key) || initialState\r\n  );\r\n\r\n  // Side-effect where item is set in local storage based on key provided in argument to value.\r\n  React.useEffect(() => {\r\n    localStorage.setItem(key, value);\r\n  }, [value, key]);\r\n\r\n  // Return the new value (based on key) var and the setValue func defined in useState.\r\n  return [value, setValue];\r\n}\r\n\r\n// Reducer variable to handle different state cases for stories; will be used later in useReducer hook\r\nconst storiesReducer = (state, action) => {\r\n  switch (action.type) {\r\n    // Initial stories state, where it is loading w/o error.\r\n    case 'STORIES_FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false\r\n      };\r\n    // Successful stories state, where it's neither loading nor has an error. Also returns data.\r\n    case 'STORIES_FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data: \r\n          action.payload.list === 0\r\n            ? action.payload.list\r\n            : state.data.concat(action.payload.list),\r\n        page: action.payload.page\r\n      };\r\n    // Failed stories state. Returns an error.\r\n    case 'STORIES_FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true\r\n      };\r\n    // Delete a story from the query. Returns data based on removed item.\r\n    case 'REMOVE_STORY':\r\n      return {\r\n        ...state,\r\n        data: state.data.filter(\r\n          story => action.payload.objectID !== story.objectID\r\n        )\r\n      }\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\n// API definitions for pulling data from hacker stories site\r\nconst API_BASE = \"https://hn.algolia.com/api/v1\";\r\nconst API_SEARCH = '/search';\r\nconst PARAM_SEARCH = 'query='\r\nconst PARAM_PAGE = 'page='\r\n\r\n// Function that holds the url search\r\nconst getUrl = (searchTerm, page) => `${API_BASE}${API_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`;\r\n\r\n// URL is too long to have in a button, so replace with an empty string\r\nconst extractSearchTerm = url => url.substring(url.lastIndexOf('?') + 1, url.lastIndexOf('&')).replace(PARAM_SEARCH, '');\r\n\r\n// Get the last 5 searches to be shown as buttons\r\nconst getLastSearches = urls => \r\n  urls.reduce((result, url, index) => {\r\n    const searchTerm = extractSearchTerm(url);\r\n    if (index === 0) {\r\n      return result.concat(searchTerm);\r\n    }\r\n\r\n    const previousSearchTerm = result[result.length - 1];\r\n\r\n    if (searchTerm === previousSearchTerm) {\r\n      return result;\r\n    } else {\r\n      return result.concat(searchTerm);\r\n    }\r\n  }, [])\r\n  .slice(-6)\r\n  .slice(0, -1);\r\n\r\n\r\n/* APPLICATION START */\r\nconst App = () => {\r\n\r\n  // Define searchTerm var and setSearchTerm func based on custom hook above.\r\n  const [searchTerm, setSearchTerm] = useSemiPersistentState('search', 'React');\r\n\r\n  // Create new urls var and setUrls func that's based on the url and query strings in the address bar, or the API that we are using.\r\n  const [urls, setUrls] = React.useState([getUrl(searchTerm, 0)]);\r\n\r\n  // Define stories var and dispatchStories func in useReducer hook. Uses storiesReducer defined above + initializes values.\r\n  const [stories, dispatchStories] = React.useReducer(\r\n    storiesReducer, \r\n    { data: [], page: 0, isLoading: false, isError: false}\r\n  );\r\n\r\n  // Returns memoized (only changes if dependencies change) callback for searching stories. Async done to do things in proper order.\r\n  const handleFetchStories = React.useCallback(async () => {\r\n    dispatchStories({ type: 'STORIES_FETCH_INIT' });\r\n    try {\r\n      // The other urls besides lastUrl will be used as indicators for previous searches\r\n      const lastUrl = urls[urls.length - 1];\r\n      const result = await axios.get(lastUrl);\r\n\r\n      dispatchStories({\r\n        type: 'STORIES_FETCH_SUCCESS',\r\n        payload: {\r\n          list: result.data.hits,\r\n          page: result.data.page\r\n        }\r\n      });\r\n    } catch {\r\n      dispatchStories({ type: 'STORIES_FETCH_FAILURE'});\r\n    }\r\n  }, [urls]);\r\n\r\n  // Side-effect that calls handleFetchStories() if handleFetchStories isn't already populated?\r\n  React.useEffect(() => {\r\n    handleFetchStories();\r\n  }, [handleFetchStories]);\r\n\r\n  // Function for handling deleted story from query\r\n  const handleRemoveStory = (item) => {\r\n    dispatchStories({\r\n      type: 'REMOVE_STORY',\r\n      payload: item\r\n    });\r\n  }\r\n\r\n  // Function that handles the search input in the text box and sets the search term in the state\r\n  const handleSearchInput = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  // Function that handles the submission of the form for the search. Sets the url in the state.\r\n  const handleSearchSubmit = (event) => {\r\n    handleSearch(searchTerm, 0);\r\n\r\n    // Prevents browser from reloading when search is submitted\r\n    event.preventDefault();\r\n  }\r\n\r\n  // Function that handles the most recent search made\r\n  const handleLastSearch = searchTerm => {\r\n    setSearchTerm(searchTerm);\r\n\r\n    handleSearch(searchTerm, 0);\r\n  };\r\n\r\n  // Consolidated function for setting urls in urls state var\r\n  const handleSearch = (searchTerm, page) => {\r\n    const url = getUrl(searchTerm, page);\r\n    setUrls(urls.concat(url));\r\n  }\r\n\r\n  // Get the last 5 searches made and store in an array variable\r\n  const lastSearches = getLastSearches(urls);\r\n\r\n  // Method to handle incrementing a page\r\n  const handleMore = () => {\r\n    const lastUrl = urls[urls.length - 1];\r\n    const searchTerm = extractSearchTerm(lastUrl);\r\n    handleSearch(searchTerm, stories.page + 1);\r\n  };\r\n\r\n  // Return code that will be used in index.js\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"headline-primary\">My Hacker Stories</h1>\r\n\r\n      <SearchForm\r\n        searchTerm={searchTerm}\r\n        onSearchInput={handleSearchInput}\r\n        onSearchSubmit={handleSearchSubmit}\r\n      />\r\n\r\n      <LastSearches lastSearches={lastSearches} onLastSearch={handleLastSearch} />\r\n\r\n      {stories.isError && <p>Something went wrong ...</p>}\r\n\r\n      <List list={stories.data} onRemoveItem={handleRemoveStory} />\r\n\r\n      {stories.isLoading ? (\r\n        <p>Loading ...</p>\r\n      ) : (\r\n        <button type=\"button\" onClick={handleMore}> {/* Button that allows you to generate more stories at the bottom */}\r\n          More\r\n        </button>  \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Component definition for SearchForm to be used in return statement\r\nconst SearchForm = ({ searchTerm, onSearchInput, onSearchSubmit }) => (\r\n  \r\n  <form onSubmit={onSearchSubmit} className=\"search-form\">\r\n    <InputWithLabel\r\n      id=\"search\"\r\n      value={searchTerm}\r\n      isFocused\r\n      onInputChange={onSearchInput}\r\n    >\r\n      <strong>Search:</strong>\r\n    </InputWithLabel>\r\n\r\n    <button\r\n      type=\"submit\"\r\n      disabled={!searchTerm}\r\n      className=\"button button_large\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </form>\r\n);\r\n\r\n// Component definition for InputWithLabel to be used in return statement.\r\nconst InputWithLabel = ({ id, type=\"text\", value, onInputChange, isFocused, children }) => {\r\n  // Declare a mutable ref object that can be used to access the DOM. current property of ref can be changed\r\n  const inputRef = React.useRef();\r\n\r\n  // Side-effect hook that puts the cursor in the input field (text box) when the browser page loads\r\n  React.useEffect(() => {\r\n    if (isFocused && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isFocused])\r\n\r\n  return(\r\n    <>\r\n      <label htmlFor={id} className=\"label\">\r\n        {children}\r\n      </label>\r\n      &nbsp;\r\n      {/* Pass the ref object into the ref attribute of the input tag */}\r\n      <input\r\n        ref={inputRef}\r\n        id={id}\r\n        type={type}\r\n        value={value}\r\n        onChange={onInputChange}\r\n        className=\"input\"\r\n      />\r\n    </>\r\n  )  \r\n}\r\n\r\n// Dictionary object that handles the sorting options for List by state\r\nconst SORTS = {\r\n  NONE: list => list,\r\n  TITLE: list => sortBy(list, 'title'),\r\n  AUTHOR: list => sortBy(list, 'author'),\r\n  COMMENT: list => sortBy(list, 'num_comments').reverse(),\r\n  POINT: list => sortBy(list, 'points').reverse()\r\n}\r\n\r\n// List component that contains the query of items from the search\r\nconst List = ({ list, onRemoveItem }) => {\r\n  const [sort, setSort] = React.useState({\r\n    sortKey: 'NONE',\r\n    isReverse: false\r\n  });\r\n\r\n  // Take the state and apply it to a new sortFunction before generating the new sortedList to be mapped over\r\n  const handleSort = (sortKey) => {\r\n    // Check to see if current sortKey is equal to passed sortKey AND if sort is not already false. If both pass, then isReverse is true, and the list should be sorted in reverse\r\n    const isReverse = sort.sortKey === sortKey && !sort.isReverse;\r\n    setSort({sortKey, isReverse});\r\n  }\r\n\r\n  const sortFunction = SORTS[sort.sortKey];\r\n  // If isReverse is true, sort the list in reverse; else sort the list normally.\r\n  const sortedList = sort.isReverse\r\n    ? sortFunction(list).reverse()\r\n    : sortFunction(list);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{display: 'flex'}}>\r\n        <span style={{width:'40%'}}>\r\n          <button id=\"TITLE\" type=\"button\" onClick={() => handleSort('TITLE')}>Title</button>\r\n        </span>\r\n        <span style={{width:'30%'}}>\r\n          <button id=\"AUTHOR\" type=\"button\" onClick={() => handleSort('AUTHOR')}>Author</button>\r\n        </span>\r\n        <span style={{width:'10%'}}>\r\n          <button id=\"COMMENT\" type=\"button\" onClick={() => handleSort('COMMENT')}>Comments</button>\r\n        </span>\r\n        <span style={{width:'10%'}}>\r\n          <button id=\"POINT\" type=\"button\" onClick={() => handleSort('POINT')}>Points</button>\r\n        </span>\r\n        <span style={{width:'10%'}}>Actions</span>\r\n      </div>\r\n      {sortedList.map((item) => (<Item key={item.objectID} item= {item} onRemoveItem={onRemoveItem} />))};\r\n    </div>\r\n  )\r\n};\r\n\r\n// Item component that shows a story's details of the title, author, number of comments, and points, along with a Dismiss button to remove from the query\r\nconst Item = ( { item, onRemoveItem } ) => {\r\n  return (\r\n    <div className=\"item\">\r\n      <span style={{ width: '40%' }}>\r\n        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">{item.title}</a> {/* noopener and noreferrer prevents hacking when target is blank */}\r\n      </span>\r\n      <span style={{ width: '30%' }}>{item.author}</span>\r\n      <span style={{ width: '10%' }}>{item.num_comments}</span>\r\n      <span style={{ width: '10%' }}>{item.points}</span>\r\n      <span style={{ width: '10%' }}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onRemoveItem(item)}\r\n          className=\"button button_small\"\r\n        >\r\n          <Check height=\"18px\" width=\"18px\" />\r\n        </button>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LastSearches = ({ lastSearches, onLastSearch }) => (\r\n  <>\r\n    {/* Give the searchTerm an index so that reused searches won't break it */}\r\n    {lastSearches.map((searchTerm, index) => (\r\n      <button key={searchTerm + index} type=\"button\" onClick={() => onLastSearch(searchTerm)}>\r\n        {searchTerm}\r\n      </button>\r\n    ))}\r\n  </>\r\n)\r\n/* APPLICATION END */\r\n\r\n// Export the App to the page that is importing it for use. In this case, it is index.js\r\nexport default App;\r\n\r\n// Export components for testing\r\nexport { storiesReducer, SearchForm, InputWithLabel, List, Item };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}